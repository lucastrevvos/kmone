name: Backend Deploy (Staging - App Runner)

on:
  push:
    branches: [develop]
    paths:
      - "backend/**"
      - ".github/workflows/backend-deploy-staging.yml"
      - "Dockerfile"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # OIDC
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_STG }}
      APP_RUNNER_SERVICE_ARN: ${{ secrets.APP_RUNNER_SERVICE_ARN_STG }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" >/dev/null

      - name: Build & Push Docker image
        run: |
          IMAGE_URI="$(aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" --query 'repositories[0].repositoryUri' --output text)"
          COMMIT="${GITHUB_SHA::7}"
          aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$IMAGE_URI"
          docker build -t "$IMAGE_URI:$COMMIT" -f backend/Dockerfile .
          docker push "$IMAGE_URI:$COMMIT"
          echo "IMAGE_URI=$IMAGE_URI:$COMMIT" >> $GITHUB_ENV

      - name: Update App Runner service
        run: |
          aws apprunner update-service \
            --service-arn "$APP_RUNNER_SERVICE_ARN" \
            --source-configuration "ImageRepository={ImageIdentifier=${{ env.IMAGE_URI }},ImageRepositoryType=ECR}"
